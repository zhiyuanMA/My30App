// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders Watch without crashing 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#f3f3f3",
    }
  }
>
  <View
    style={
      Object {
        "backgroundColor": "#fff",
        "borderBottomColor": "#ddd",
        "borderBottomWidth": 1,
        "height": 170,
        "paddingBottom": 20,
        "paddingLeft": 30,
        "paddingRight": 30,
        "paddingTop": 20,
        "width": 750,
      }
    }
  >
    <View
      style={
        Object {
          "flexDirection": "row",
          "justifyContent": "flex-end",
        }
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        disabled={false}
        ellipsizeMode="tail"
        style={
          Object {
            "color": "#555",
            "fontSize": 20,
            "fontWeight": "100",
          }
        }
      >
        00:00.00
      </Text>
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
          "justifyContent": "flex-end",
        }
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        disabled={false}
        ellipsizeMode="tail"
        style={
          Object {
            "color": "#222",
            "fontSize": 70,
            "fontWeight": "100",
          }
        }
      >
        00:00.00
      </Text>
    </View>
  </View>
  <View
    style={
      Object {
        "backgroundColor": "#f3f3f3",
        "flexDirection": "row",
        "height": 100,
        "paddingBottom": 0,
        "paddingLeft": 60,
        "paddingRight": 60,
        "paddingTop": 30,
        "width": 750,
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "flex-start",
          "flex": 1,
        }
      }
    >
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
            },
            Object {
              "alignItems": "center",
              "backgroundColor": "#fff",
              "borderRadius": 35,
              "height": 70,
              "justifyContent": "center",
              "width": 70,
            },
          ]
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          disabled={false}
          ellipsizeMode="tail"
          style={
            Object {
              "backgroundColor": "transparent",
              "color": "#555",
              "fontSize": 14,
            }
          }
        >
          Lap
        </Text>
      </View>
    </View>
    <View
      style={
        Object {
          "alignItems": "flex-end",
          "flex": 1,
        }
      }
    >
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
            },
            Object {
              "alignItems": "center",
              "backgroundColor": "#fff",
              "borderRadius": 35,
              "height": 70,
              "justifyContent": "center",
              "width": 70,
            },
          ]
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          disabled={false}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "fontSize": 14,
              },
              Object {
                "color": "#60B644",
              },
            ]
          }
        >
          Start
        </Text>
      </View>
    </View>
  </View>
  <RCTScrollView
    data={Array []}
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    onViewableItemsChanged={undefined}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    style={
      Object {
        "height": 1034,
        "paddingLeft": 15,
        "width": 750,
      }
    }
    updateCellsBatchingPeriod={50}
    windowSize={21}
  >
    <View />
  </RCTScrollView>
</View>
`;
